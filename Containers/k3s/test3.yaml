---
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: jupyterlab
    namespace: retail-project-dev
    labels:
      name: jupyterlab
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: jupyterlab
    template:
      metadata:
        labels:
          name: jupyterlab
      spec:
        securityContext:
          runAsUser: 0
          fsGroup: 0
        containers:
          - name: jupyterlab
            image: jupyter/datascience-notebook:latest
            imagePullPolicy: IfNotPresent
            ports:
            - containerPort: 8888
            command:
              - /bin/bash
              - -c
              - |
                start.sh jupyter lab --LabApp.token='password' --LabApp.ip='0.0.0.0' --LabApp.allow_root=True
            volumeMounts:
              - name: jupyterlab-data
                mountPath: /home/jovyan
            resources:
              requests:
                memory: 500Mi
                cpu: 250m
        restartPolicy: Always
        volumes:
        - name: jupyterlab-data
          persistentVolumeClaim:
            claimName: jupyterlab-pvc
---
  apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: jupyterlab-pvc
    namespace: retail-project-dev
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 10Gi
    storageClassName: standard-gp2-retain


---
  apiVersion: v1
  kind: Service
  metadata:
    name: jupyterlab
    namespace: retail-project-dev
    labels:
      name: jupyterlab
  spec:
    type: LoadBalancer
    ports:
      - port: 80
        targetPort: 8888
        protocol: TCP
        name: http
    selector:
      name: jupyterlab
---
    apiVersion: networking.k8s.io/v1beta1
    kind: Ingress
    metadata:
      name: jupyterlab-ingress
      namespace: retail-project-dev
      annotations:
        kubernetes.io/ingress.class: "traefik"
        traefik.frontend.rule.type: PathPrefixStrip
    spec:
      rules:
      - http:
          paths:
          - path: /jup
            backend:
              serviceName: jupyterlab
              servicePort: 80